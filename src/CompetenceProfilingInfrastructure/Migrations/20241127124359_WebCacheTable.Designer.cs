// <auto-generated />
using System;
using CompetenceProfilingInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompetenceProfilingInfrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241127124359_WebCacheTable")]
    partial class WebCacheTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompetenceProfilingDomain.Contracts.ModelsDatabase.OutcomesCanvasDto", b =>
                {
                    b.Property<string>("LmsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Architecture")
                        .HasColumnType("int");

                    b.Property<int>("Competence")
                        .HasColumnType("int");

                    b.Property<string>("CriteriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("LevelDivisorNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LmsId");

                    b.ToTable("OutcomesCanvas");
                });

            modelBuilder.Entity("CompetenceProfilingDomain.Contracts.ModelsDatabase.StudentAdviceDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CriteriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutcomeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentAdvices");
                });

            modelBuilder.Entity("CompetenceProfilingDomain.Contracts.ModelsDatabase.StudentKpiDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CriteriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("OutcomeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentKpi");
                });

            modelBuilder.Entity("CompetenceProfilingDomain.Contracts.ModelsDatabase.TreeRootCanvasDto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TreeRootCanvas");
                });

            modelBuilder.Entity("TreeRootOutcome", b =>
                {
                    b.Property<string>("OutcomesLmsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TreeRootId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OutcomesLmsId", "TreeRootId");

                    b.HasIndex("TreeRootId");

                    b.ToTable("TreeRootOutcome");
                });

            modelBuilder.Entity("TreeRootOutcome", b =>
                {
                    b.HasOne("CompetenceProfilingDomain.Contracts.ModelsDatabase.OutcomesCanvasDto", null)
                        .WithMany()
                        .HasForeignKey("OutcomesLmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompetenceProfilingDomain.Contracts.ModelsDatabase.TreeRootCanvasDto", null)
                        .WithMany()
                        .HasForeignKey("TreeRootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
